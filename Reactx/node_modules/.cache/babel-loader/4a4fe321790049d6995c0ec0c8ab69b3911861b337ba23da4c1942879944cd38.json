{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Core i3\\\\OneDrive\\\\Documentos\\\\projectReact\\\\reactx\\\\src\\\\componentes\\\\Conta\\\\ContaForms.js\",\n  _s = $RefreshSig$();\nimport Input from '../forms/Input';\nimport Select from '../forms/Select';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ContaForms() {\n  _s();\n  const [tiposContas, setTiposContas] = useState([]);\n  const [conta, setConta] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:5000/tipoDeConta', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(data => setTiposContas(data));\n  }, []);\n  function adicionarConta() {\n    fetch('http://localhost:5000/contas', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(conta)\n    }).then(resp => resp.json()); //.then(()=>history('/Contas',{state:{message:'Projeto criado com sucesso!'}})).catch(error=>console.log(error))\n  }\n\n  function handleTipoConta(e) {\n    setConta({\n      ...conta,\n      tipoConta: {\n        id: e.target.value,\n        tipo: e.target.options[e.target.selectedIndex].text\n      }\n    });\n    console.log('kduedbu');\n  }\n  function handleConta(e) {\n    setConta({\n      ...conta,\n      [e.target.name]: e.target.value\n    });\n    console.log(conta);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      name: \"nomeProprietario\",\n      text: \"Nome\",\n      placeholder: \"ex:Jo\\xE3o Ernesto\",\n      onChange: handleConta,\n      value: conta.nomeProprietario ? conta.nomeProprietario : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      name: \"cpfProprietario\",\n      text: \"CPF\",\n      placeholder: \"ex:704.261.843-27\",\n      onChange: handleConta,\n      value: conta.cpfProprietario ? conta.cpfProprietario : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"date\",\n      name: \"dataNascimento\",\n      text: \"Data de nascimento\",\n      onChange: handleConta,\n      value: conta.dataNascimento ? conta.dataNascimento : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(ContaForms, \"4mREWm2Cf/Q+IIOU1wNxF2orKpI=\");\n_c = ContaForms;\nexport default ContaForms;\nvar _c;\n$RefreshReg$(_c, \"ContaForms\");","map":{"version":3,"names":["Input","Select","useEffect","useState","ContaForms","tiposContas","setTiposContas","conta","setConta","fetch","method","headers","then","resp","json","data","adicionarConta","body","JSON","stringify","handleTipoConta","e","tipoConta","id","target","value","tipo","options","selectedIndex","text","console","log","handleConta","name","nomeProprietario","cpfProprietario","dataNascimento"],"sources":["C:/Users/Core i3/OneDrive/Documentos/projectReact/reactx/src/componentes/Conta/ContaForms.js"],"sourcesContent":["import Input from '../forms/Input'\r\nimport Select from '../forms/Select'\r\nimport {useEffect, useState} from 'react'\r\n\r\nfunction ContaForms(){\r\n    const [tiposContas,setTiposContas]=useState([])\r\n    const [conta,setConta]=useState({})\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:5000/tipoDeConta',{\r\n            method:'GET',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }).then(resp=>resp.json()).then(data=>setTiposContas(data))\r\n    },[])\r\n\r\n    function adicionarConta(){\r\n\r\n        fetch('http://localhost:5000/contas',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify(conta)\r\n        }).then(resp=>resp.json())//.then(()=>history('/Contas',{state:{message:'Projeto criado com sucesso!'}})).catch(error=>console.log(error))\r\n   \r\n    }\r\n\r\n    function handleTipoConta(e){\r\n       \r\n        setConta({...conta,tipoConta:{\r\n            id:e.target.value,\r\n            tipo:e.target.options[e.target.selectedIndex].text   \r\n        }})\r\n\r\n        console.log('kduedbu')\r\n     \r\n        \r\n    }\r\n\r\n    function handleConta(e){\r\n        setConta({...conta,[e.target.name]:e.target.value})\r\n        console.log(conta)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n           \r\n                <Input type='text' name='nomeProprietario'  text='Nome' placeholder='ex:JoÃ£o Ernesto' onChange={handleConta} value={conta.nomeProprietario ? conta.nomeProprietario:''} ></Input>\r\n                <Input type='text' name='cpfProprietario' text='CPF' placeholder='ex:704.261.843-27' onChange={handleConta} value={conta.cpfProprietario ? conta.cpfProprietario:''}></Input>\r\n                <Input type='date' name='dataNascimento' text='Data de nascimento' onChange={handleConta} value={conta.dataNascimento ? conta.dataNascimento:''}></Input>\r\n                {/* <Select name='tipoConta' text='Tipo da Conta' array={tiposContas} OnChange={handleTipoConta} value={conta.tipo ? conta.tipo.id:''} ></Select> */}\r\n     \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContaForms"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAEzC,SAASC,UAAU,GAAE;EAAA;EACjB,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAACH,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACI,KAAK,EAACC,QAAQ,CAAC,GAACL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEnCD,SAAS,CAAC,MAAI;IACVO,KAAK,CAAC,mCAAmC,EAAC;MACtCC,MAAM,EAAC,KAAK;MACZC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB;IACJ,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAACG,IAAI,IAAET,cAAc,CAACS,IAAI,CAAC,CAAC;EAC/D,CAAC,EAAC,EAAE,CAAC;EAEL,SAASC,cAAc,GAAE;IAErBP,KAAK,CAAC,8BAA8B,EAAC;MACjCC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB,CAAC;MACDM,IAAI,EAACC,IAAI,CAACC,SAAS,CAACZ,KAAK;IAC7B,CAAC,CAAC,CAACK,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,EAAE,CAAC;EAE9B;;EAEA,SAASM,eAAe,CAACC,CAAC,EAAC;IAEvBb,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAACe,SAAS,EAAC;QACzBC,EAAE,EAACF,CAAC,CAACG,MAAM,CAACC,KAAK;QACjBC,IAAI,EAACL,CAAC,CAACG,MAAM,CAACG,OAAO,CAACN,CAAC,CAACG,MAAM,CAACI,aAAa,CAAC,CAACC;MAClD;IAAC,CAAC,CAAC;IAEHC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EAG1B;EAEA,SAASC,WAAW,CAACX,CAAC,EAAC;IACnBb,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAAC,CAACc,CAAC,CAACG,MAAM,CAACS,IAAI,GAAEZ,CAAC,CAACG,MAAM,CAACC;IAAK,CAAC,CAAC;IACnDK,OAAO,CAACC,GAAG,CAACxB,KAAK,CAAC;EACtB;EAIA,oBACI;IAAA,wBAEQ,QAAC,KAAK;MAAC,IAAI,EAAC,MAAM;MAAC,IAAI,EAAC,kBAAkB;MAAE,IAAI,EAAC,MAAM;MAAC,WAAW,EAAC,oBAAiB;MAAC,QAAQ,EAAEyB,WAAY;MAAC,KAAK,EAAEzB,KAAK,CAAC2B,gBAAgB,GAAG3B,KAAK,CAAC2B,gBAAgB,GAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAU,eACjL,QAAC,KAAK;MAAC,IAAI,EAAC,MAAM;MAAC,IAAI,EAAC,iBAAiB;MAAC,IAAI,EAAC,KAAK;MAAC,WAAW,EAAC,mBAAmB;MAAC,QAAQ,EAAEF,WAAY;MAAC,KAAK,EAAEzB,KAAK,CAAC4B,eAAe,GAAG5B,KAAK,CAAC4B,eAAe,GAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7K,QAAC,KAAK;MAAC,IAAI,EAAC,MAAM;MAAC,IAAI,EAAC,gBAAgB;MAAC,IAAI,EAAC,oBAAoB;MAAC,QAAQ,EAAEH,WAAY;MAAC,KAAK,EAAEzB,KAAK,CAAC6B,cAAc,GAAG7B,KAAK,CAAC6B,cAAc,GAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA,gBAG9J;AAEX;AAAC,GAtDQhC,UAAU;AAAA,KAAVA,UAAU;AAwDnB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}