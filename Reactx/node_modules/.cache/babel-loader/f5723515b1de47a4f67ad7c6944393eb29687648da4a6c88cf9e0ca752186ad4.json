{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Core i3\\\\OneDrive\\\\Documentos\\\\projectReact\\\\reactx\\\\src\\\\componentes\\\\pages\\\\NewConta.js\",\n  _s = $RefreshSig$();\nimport ContaForms from \"../Conta/ContaForms\";\nimport Styles from './NewConta.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport validarString from '../../regex/Regex.js';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NewConta() {\n  _s();\n  const [conta, setConta] = useState({});\n  const history = useNavigate();\n  const [validarNomeConta, setValidarNomeConta] = useState(true);\n  const [validarNomeProprietario, setValidarNomeProprietario] = useState(true);\n  const [validarData, setValidarData] = useState(true);\n  const [maiorDeIdade, setMaiorDeIdade] = useState(true);\n  const Validator = require('cpf-rg-validator');\n  const timeElapsed = Date.now();\n  const today = new Date(timeElapsed);\n  function ValidarNomeConta() {\n    if (conta.nomeConta && conta.nomeConta.match(validarString)) {\n      setValidarNomeConta(false);\n      return false;\n    } else {\n      setValidarNomeConta(true);\n      return true;\n    }\n  }\n  function ValidarNomeProprietario() {\n    if (conta.nomeProprietario && conta.nomeProprietario.match(validarString)) {\n      setValidarNomeProprietario(false);\n      return false;\n    } else {\n      setValidarNomeProprietario(true);\n      return true;\n    }\n  }\n  function ValidarData() {\n    if (conta.dataNascimento && parseInt(today.toISOString().substring(0, 4)) - parseInt(conta.dataNascimento) >= 140) {\n      setValidarData(false);\n      return true;\n    } else {\n      setValidarData(true);\n      return false;\n    }\n  }\n  function MaiorDeIdade() {\n    if (parseInt(today.toISOString().substring(0, 4)) - parseInt(conta.dataNascimento.substring(0, 4)) < 18 || parseInt(today.toISOString().substring(0, 4)) - parseInt(conta.dataNascimento.substring(0, 4)) === 18 && parseInt(today.toISOString().substring(5, 7)) < parseInt(conta.dataNascimento.substring(5, 7)) || parseInt(today.toISOString().substring(0, 4)) - parseInt(conta.dataNascimento.substring(0, 4)) === 18 && parseInt(today.toISOString().substring(5, 7)) === parseInt(conta.dataNascimento.substring(5, 7)) && parseInt(today.toISOString().substring(8, 10)) < parseInt(conta.dataNascimento.substring(8, 10))) {\n      setMaiorDeIdade(false);\n      return false;\n    } else {\n      setMaiorDeIdade(true);\n      return true;\n    }\n  }\n  function validarConta() {\n    ValidarNomeConta();\n    ValidarNomeProprietario();\n    ValidarData();\n    MaiorDeIdade();\n    if (conta.nomeConta === '') {\n      setValidarNomeConta(false);\n    }\n    if (conta.nomeProprietario === '') {\n      setValidarNomeProprietario(false);\n    }\n    if (conta.dataNascimento === '') {\n      setValidarData(false);\n    }\n    if (!validarNomeConta) {\n      return false;\n    }\n    if (!validarNomeProprietario) {\n      return false;\n    }\n    if (conta.dataNascimento && conta.nomeConta && conta.nomeProprietario && conta.cpfProprietario && conta.tipoConta && conta.tipoConta == '') {\n      return true;\n    }\n  }\n  function adicionarConta() {\n    //conta.cpfProprietario=conta.cpfProprietario.substring(0,3) + '.' + conta.cpfProprietario.substring(3,6)+'.'+conta.cpfProprietario.substring(6,9) + '-' + conta.cpfProprietario.substring(9,11)\n\n    if (!conta.tipoConta) {\n\n      //fetch('',{}).then(()=>history('/Contas',{state:{messageDeTipoContaInvalido:'Tipo de conta nÃ£o foi selecionada!'}})).catch(error=>console.log(error))\n    } else if (!Validator.cpf(conta.cpfProprietario)) {} else {\n      conta.saldo = 0;\n      conta.acoes = [];\n      fetch('http://localhost:5000/contas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(conta)\n      }).then(resp => resp.json()).then(() => history('/Contas', {\n        state: {\n          messageCriacao: 'Conta criado com sucesso!'\n        }\n      })).catch(error => console.log(error));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.newConta,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Crie sua conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comece agora a se organizar!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContaForms, {\n        adicionarConta: adicionarConta,\n        conta: conta,\n        setConta: setConta,\n        validarNomeProprietario: validarNomeProprietario,\n        validarNomeConta: validarNomeConta,\n        validarConta: validarConta,\n        validarData: validarData,\n        maiorDeIdade: maiorDeIdade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(NewConta, \"FrUAmgs4hO6qCaWjDC+2ZyKbxYE=\", false, function () {\n  return [useNavigate];\n});\n_c = NewConta;\nexport default NewConta;\nvar _c;\n$RefreshReg$(_c, \"NewConta\");","map":{"version":3,"names":["ContaForms","Styles","useNavigate","validarString","useState","NewConta","conta","setConta","history","validarNomeConta","setValidarNomeConta","validarNomeProprietario","setValidarNomeProprietario","validarData","setValidarData","maiorDeIdade","setMaiorDeIdade","Validator","require","timeElapsed","Date","now","today","ValidarNomeConta","nomeConta","match","ValidarNomeProprietario","nomeProprietario","ValidarData","dataNascimento","parseInt","toISOString","substring","MaiorDeIdade","validarConta","cpfProprietario","tipoConta","adicionarConta","cpf","saldo","acoes","fetch","method","headers","body","JSON","stringify","then","resp","json","state","messageCriacao","catch","error","console","log","newConta"],"sources":["C:/Users/Core i3/OneDrive/Documentos/projectReact/reactx/src/componentes/pages/NewConta.js"],"sourcesContent":["import ContaForms from \"../Conta/ContaForms\";\r\nimport Styles from './NewConta.module.css'\r\nimport { useNavigate} from 'react-router-dom'\r\nimport validarString from '../../regex/Regex.js'\r\nimport { useState } from \"react\";\r\n\r\nfunction NewConta(){\r\n\r\n    const [conta,setConta]=useState({})\r\n\r\n    const history=useNavigate()\r\n    const [validarNomeConta,setValidarNomeConta]=useState(true)\r\n    const [validarNomeProprietario,setValidarNomeProprietario]=useState(true)\r\n    const [validarData,setValidarData]=useState(true)\r\n    const [maiorDeIdade,setMaiorDeIdade]=useState(true)\r\n    const Validator = require('cpf-rg-validator')\r\n    const timeElapsed = Date.now();\r\n    const today = new Date(timeElapsed)\r\n\r\n    function ValidarNomeConta(){\r\n\r\n        if (conta.nomeConta && conta.nomeConta.match(validarString)){\r\n    \r\n            setValidarNomeConta(false)\r\n            return false\r\n      \r\n         }else{\r\n             setValidarNomeConta(true)\r\n             return true\r\n         }\r\n\r\n\r\n    }\r\n\r\n    function ValidarNomeProprietario(){\r\n        if ((conta.nomeProprietario && conta.nomeProprietario.match(validarString)) ){\r\n            setValidarNomeProprietario(false)\r\n            return false\r\n        }else{\r\n            setValidarNomeProprietario(true)\r\n            return true\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function ValidarData(){\r\n\r\n        if(conta.dataNascimento && parseInt(today.toISOString().substring(0,4))-parseInt(conta.dataNascimento)>=140){\r\n            setValidarData(false)\r\n            return true\r\n         \r\n        }else{\r\n            setValidarData(true)\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    function MaiorDeIdade(){\r\n\r\n        if((parseInt(today.toISOString().substring(0,4))-parseInt(conta.dataNascimento.substring(0,4))<18) \r\n                 || (parseInt(today.toISOString().substring(0,4))-parseInt(conta.dataNascimento.substring(0,4))===18 && parseInt(today.toISOString().substring(5,7))<parseInt(conta.dataNascimento.substring(5,7)))\r\n                 || (parseInt(today.toISOString().substring(0,4))-parseInt(conta.dataNascimento.substring(0,4))===18 && parseInt(today.toISOString().substring(5,7))===parseInt(conta.dataNascimento.substring(5,7)) && parseInt(today.toISOString().substring(8,10))<parseInt(conta.dataNascimento.substring(8,10)) )){\r\n                \r\n                  setMaiorDeIdade(false)\r\n                  return false  \r\n        }else{\r\n            setMaiorDeIdade(true)\r\n            return true\r\n        }\r\n    }\r\n\r\n    function validarConta(){\r\n\r\n        ValidarNomeConta()\r\n        ValidarNomeProprietario()\r\n        ValidarData()\r\n        MaiorDeIdade()\r\n\r\n        if(conta.nomeConta ===''){\r\n            setValidarNomeConta(false)\r\n        }\r\n\r\n        if(conta.nomeProprietario===''){\r\n            setValidarNomeProprietario(false)\r\n        }\r\n\r\n        if(conta.dataNascimento===''){\r\n            setValidarData(false)\r\n        }\r\n\r\n        if(!validarNomeConta ){\r\n            return false\r\n        }\r\n\r\n        if(!validarNomeProprietario){\r\n            return false\r\n        }\r\n\r\n        if(conta.dataNascimento && conta.nomeConta  && conta.nomeProprietario && conta.cpfProprietario && conta.tipoConta && conta.tipoConta==''){     \r\n            return true\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    function adicionarConta(){\r\n\r\n        //conta.cpfProprietario=conta.cpfProprietario.substring(0,3) + '.' + conta.cpfProprietario.substring(3,6)+'.'+conta.cpfProprietario.substring(6,9) + '-' + conta.cpfProprietario.substring(9,11)\r\n    \r\n      if( !conta.tipoConta){\r\n    \r\n            //fetch('',{}).then(()=>history('/Contas',{state:{messageDeTipoContaInvalido:'Tipo de conta nÃ£o foi selecionada!'}})).catch(error=>console.log(error))\r\n    \r\n        }else if(!Validator.cpf(conta.cpfProprietario)){\r\n    \r\n           \r\n    \r\n        }else{\r\n    \r\n                conta.saldo=0\r\n                conta.acoes=[]\r\n        \r\n                fetch('http://localhost:5000/contas',{\r\n                    method:'POST',\r\n                    headers:{\r\n                        'Content-Type':'application/json'\r\n                    },\r\n                    body:JSON.stringify(conta)\r\n                }).then(resp=>resp.json()).then(()=>history('/Contas',{state:{messageCriacao:'Conta criado com sucesso!'}})).catch(error=>console.log(error))\r\n                \r\n            }\r\n        }\r\n        \r\n\r\n    return(\r\n        <>\r\n            <div className={Styles.newConta}>\r\n            <h2>Crie sua conta</h2>\r\n            <h3>Comece agora a se organizar!!!</h3>\r\n            <ContaForms adicionarConta={adicionarConta} conta={conta} setConta={setConta} validarNomeProprietario={validarNomeProprietario} validarNomeConta={validarNomeConta} validarConta={validarConta} validarData={validarData} maiorDeIdade={maiorDeIdade}/>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default NewConta"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}