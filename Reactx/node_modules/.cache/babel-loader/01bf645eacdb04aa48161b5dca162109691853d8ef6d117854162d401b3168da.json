{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Core i3\\\\OneDrive\\\\Documentos\\\\projectReact\\\\reactx\\\\src\\\\componentes\\\\pages\\\\NewConta.js\",\n  _s = $RefreshSig$();\nimport ContaForms from \"../Conta/ContaForms\";\nimport Styles from './NewConta.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport validarString from '../../regex/Regex.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NewConta() {\n  _s();\n  const [conta, setConta] = useState({});\n  const history = useNavigate();\n  const Validator = require('cpf-rg-validator');\n  const timeElapsed = Date.now();\n  const today = new Date(timeElapsed);\n  function adicionarConta() {\n    conta.cpfProprietario = conta.cpfProprietario.substring(0, 3) + '.' + conta.cpfProprietario.substring(3, 6) + '.' + conta.cpfProprietario.substring(6, 9) + '-' + conta.cpfProprietario.substring(9, 11);\n    if (!conta.dataNascimento || parseInt(today.toISOString().substring(0, 4)) - parseInt(conta.dataNascimento) >= 140) {\n      fetch('', {}).then(() => history('/Contas', {\n        state: {\n          messageDataInvalido: 'Data inválida!'\n        }\n      })).catch(error => console.log(error));\n    } else if (!conta.nomeConta || conta.nomeConta.match(validarString)) {\n      fetch('', {}).then(() => history('/Contas', {\n        state: {\n          messageDeNomeContaInvalida: 'Nome da Conta Inválida!'\n        }\n      })).catch(error => console.log(error));\n    } else if (!conta.nomeProprietario || conta.nomeProprietario.match(validarString)) {\n      fetch('', {}).then(() => history('/Contas', {\n        state: {\n          messageDeNomeProprietarioInvalida: 'Nome do proprietário Inválido!'\n        }\n      })).catch(error => console.log(error));\n    } else if (!conta.tipoConta) {\n      fetch('', {}).then(() => history('/Contas', {\n        state: {\n          messageDeTipoContaInvalido: 'Tipo de conta não foi selecionada!'\n        }\n      })).catch(error => console.log(error));\n    } else if (!Validator.cpf(conta.cpfProprietario)) {\n      fetch('', {}).then(() => history('/Contas', {\n        state: {\n          messageCpfInvalido: 'Cpf inválido!'\n        }\n      })).catch(error => console.log(error));\n    } else if (parseInt(today.toISOString().substring(0, 4)) - parseInt(conta.dataNascimento.substring(0, 4)) < 18 || parseInt(today.toISOString().substring(0, 4)) - parseInt(conta.dataNascimento.substring(0, 4)) === 18 && parseInt(today.toISOString().substring(5, 7)) < parseInt(conta.dataNascimento.substring(5, 7)) || parseInt(today.toISOString().substring(0, 4)) - parseInt(conta.dataNascimento.substring(0, 4)) === 18 && parseInt(today.toISOString().substring(5, 7)) === parseInt(conta.dataNascimento.substring(5, 7)) && parseInt(today.toISOString().substring(8, 10)) < parseInt(conta.dataNascimento.substring(8, 10))) {\n      fetch('', {}).then(() => history('/Contas', {\n        state: {\n          messageDeMenorIdade: 'Precisa ser maior de 18 anos!!'\n        }\n      })).catch(error => console.log(error));\n    } else {\n      conta.saldo = 0;\n      conta.acoes = [];\n      fetch('http://localhost:5000/contas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(conta)\n      }).then(resp => resp.json()).then(() => history('/Contas', {\n        state: {\n          messageCriacao: 'Conta criado com sucesso!'\n        }\n      })).catch(error => console.log(error));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.newConta,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Crie sua conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comece agora a se organizar!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContaForms, {\n        adicionarConta: adicionarConta,\n        conta: conta,\n        setConta: setConta\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(NewConta, \"4/ZJoklI4NWp9RArPh+q7sX6LvQ=\", false, function () {\n  return [useNavigate];\n});\n_c = NewConta;\nexport default NewConta;\nvar _c;\n$RefreshReg$(_c, \"NewConta\");","map":{"version":3,"names":["ContaForms","Styles","useNavigate","validarString","NewConta","conta","setConta","useState","history","Validator","require","timeElapsed","Date","now","today","adicionarConta","cpfProprietario","substring","dataNascimento","parseInt","toISOString","fetch","then","state","messageDataInvalido","catch","error","console","log","nomeConta","match","messageDeNomeContaInvalida","nomeProprietario","messageDeNomeProprietarioInvalida","tipoConta","messageDeTipoContaInvalido","cpf","messageCpfInvalido","messageDeMenorIdade","saldo","acoes","method","headers","body","JSON","stringify","resp","json","messageCriacao","newConta"],"sources":["C:/Users/Core i3/OneDrive/Documentos/projectReact/reactx/src/componentes/pages/NewConta.js"],"sourcesContent":["import ContaForms from \"../Conta/ContaForms\";\r\nimport Styles from './NewConta.module.css'\r\nimport { useNavigate} from 'react-router-dom'\r\nimport validarString from '../../regex/Regex.js'\r\n\r\nfunction NewConta(){\r\n\r\n    const [conta,setConta]=useState({})\r\n    const history=useNavigate()\r\n    const Validator = require('cpf-rg-validator')\r\n    const timeElapsed = Date.now();\r\n    const today = new Date(timeElapsed)\r\n\r\n    function adicionarConta(){\r\n\r\n        conta.cpfProprietario=conta.cpfProprietario.substring(0,3) + '.' + conta.cpfProprietario.substring(3,6)+'.'+conta.cpfProprietario.substring(6,9) + '-' + conta.cpfProprietario.substring(9,11)\r\n    \r\n        if(!conta.dataNascimento || parseInt(today.toISOString().substring(0,4))-parseInt(conta.dataNascimento)>=140){\r\n    \r\n            fetch('',{}).then(()=>history('/Contas',{state:{messageDataInvalido:'Data inválida!'}})).catch(error=>console.log(error))\r\n        \r\n        }else if (!conta.nomeConta || conta.nomeConta.match(validarString)){\r\n    \r\n            fetch('',{}).then(()=>history('/Contas',{state:{messageDeNomeContaInvalida:'Nome da Conta Inválida!'}})).catch(error=>console.log(error))\r\n     \r\n        }else if (!conta.nomeProprietario || conta.nomeProprietario.match(validarString)){\r\n    \r\n            fetch('',{}).then(()=>history('/Contas',{state:{messageDeNomeProprietarioInvalida:'Nome do proprietário Inválido!'}})).catch(error=>console.log(error))\r\n     \r\n        }\r\n        \r\n        else if( !conta.tipoConta){\r\n    \r\n            fetch('',{}).then(()=>history('/Contas',{state:{messageDeTipoContaInvalido:'Tipo de conta não foi selecionada!'}})).catch(error=>console.log(error))\r\n    \r\n        }else if(!Validator.cpf(conta.cpfProprietario)){\r\n    \r\n            fetch('',{}).then(()=>history('/Contas',{state:{messageCpfInvalido:'Cpf inválido!'}})).catch(error=>console.log(error))\r\n    \r\n        }else if((parseInt(today.toISOString().substring(0,4))-parseInt(conta.dataNascimento.substring(0,4))<18) \r\n                 || (parseInt(today.toISOString().substring(0,4))-parseInt(conta.dataNascimento.substring(0,4))===18 && parseInt(today.toISOString().substring(5,7))<parseInt(conta.dataNascimento.substring(5,7)))\r\n                 || (parseInt(today.toISOString().substring(0,4))-parseInt(conta.dataNascimento.substring(0,4))===18 && parseInt(today.toISOString().substring(5,7))===parseInt(conta.dataNascimento.substring(5,7)) && parseInt(today.toISOString().substring(8,10))<parseInt(conta.dataNascimento.substring(8,10)) )){\r\n                \r\n                fetch('',{}).then(()=>history('/Contas',{state:{messageDeMenorIdade:'Precisa ser maior de 18 anos!!'}})).catch(error=>console.log(error))\r\n        }else{\r\n    \r\n                conta.saldo=0\r\n                conta.acoes=[]\r\n        \r\n                fetch('http://localhost:5000/contas',{\r\n                    method:'POST',\r\n                    headers:{\r\n                        'Content-Type':'application/json'\r\n                    },\r\n                    body:JSON.stringify(conta)\r\n                }).then(resp=>resp.json()).then(()=>history('/Contas',{state:{messageCriacao:'Conta criado com sucesso!'}})).catch(error=>console.log(error))\r\n                \r\n            }\r\n        }\r\n        \r\n\r\n    return(\r\n        <>\r\n            <div className={Styles.newConta}>\r\n            <h2>Crie sua conta</h2>\r\n            <h3>Comece agora a se organizar!!!</h3>\r\n            <ContaForms adicionarConta={adicionarConta} conta={conta} setConta={setConta}/>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default NewConta"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,WAAW,QAAO,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,sBAAsB;AAAA;AAAA;AAEhD,SAASC,QAAQ,GAAE;EAAA;EAEf,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnC,MAAMC,OAAO,GAACN,WAAW,EAAE;EAC3B,MAAMO,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;EAC7C,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,EAAE;EAC9B,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAACD,WAAW,CAAC;EAEnC,SAASI,cAAc,GAAE;IAErBV,KAAK,CAACW,eAAe,GAACX,KAAK,CAACW,eAAe,CAACC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,GAAG,GAAGZ,KAAK,CAACW,eAAe,CAACC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,GAAC,GAAG,GAACZ,KAAK,CAACW,eAAe,CAACC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,GAAG,GAAGZ,KAAK,CAACW,eAAe,CAACC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC;IAE9L,IAAG,CAACZ,KAAK,CAACa,cAAc,IAAIC,QAAQ,CAACL,KAAK,CAACM,WAAW,EAAE,CAACH,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAACE,QAAQ,CAACd,KAAK,CAACa,cAAc,CAAC,IAAE,GAAG,EAAC;MAEzGG,KAAK,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,MAAId,OAAO,CAAC,SAAS,EAAC;QAACe,KAAK,EAAC;UAACC,mBAAmB,EAAC;QAAgB;MAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IAE7H,CAAC,MAAK,IAAI,CAACrB,KAAK,CAACwB,SAAS,IAAIxB,KAAK,CAACwB,SAAS,CAACC,KAAK,CAAC3B,aAAa,CAAC,EAAC;MAE/DkB,KAAK,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,MAAId,OAAO,CAAC,SAAS,EAAC;QAACe,KAAK,EAAC;UAACQ,0BAA0B,EAAC;QAAyB;MAAC,CAAC,CAAC,CAAC,CAACN,KAAK,CAACC,KAAK,IAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IAE7I,CAAC,MAAK,IAAI,CAACrB,KAAK,CAAC2B,gBAAgB,IAAI3B,KAAK,CAAC2B,gBAAgB,CAACF,KAAK,CAAC3B,aAAa,CAAC,EAAC;MAE7EkB,KAAK,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,MAAId,OAAO,CAAC,SAAS,EAAC;QAACe,KAAK,EAAC;UAACU,iCAAiC,EAAC;QAAgC;MAAC,CAAC,CAAC,CAAC,CAACR,KAAK,CAACC,KAAK,IAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IAE3J,CAAC,MAEI,IAAI,CAACrB,KAAK,CAAC6B,SAAS,EAAC;MAEtBb,KAAK,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,MAAId,OAAO,CAAC,SAAS,EAAC;QAACe,KAAK,EAAC;UAACY,0BAA0B,EAAC;QAAoC;MAAC,CAAC,CAAC,CAAC,CAACV,KAAK,CAACC,KAAK,IAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IAExJ,CAAC,MAAK,IAAG,CAACjB,SAAS,CAAC2B,GAAG,CAAC/B,KAAK,CAACW,eAAe,CAAC,EAAC;MAE3CK,KAAK,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,MAAId,OAAO,CAAC,SAAS,EAAC;QAACe,KAAK,EAAC;UAACc,kBAAkB,EAAC;QAAe;MAAC,CAAC,CAAC,CAAC,CAACZ,KAAK,CAACC,KAAK,IAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IAE3H,CAAC,MAAK,IAAIP,QAAQ,CAACL,KAAK,CAACM,WAAW,EAAE,CAACH,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAACE,QAAQ,CAACd,KAAK,CAACa,cAAc,CAACD,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAAC,EAAE,IAC1FE,QAAQ,CAACL,KAAK,CAACM,WAAW,EAAE,CAACH,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAACE,QAAQ,CAACd,KAAK,CAACa,cAAc,CAACD,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,KAAG,EAAE,IAAIE,QAAQ,CAACL,KAAK,CAACM,WAAW,EAAE,CAACH,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAACE,QAAQ,CAACd,KAAK,CAACa,cAAc,CAACD,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAE,IAC9LE,QAAQ,CAACL,KAAK,CAACM,WAAW,EAAE,CAACH,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAACE,QAAQ,CAACd,KAAK,CAACa,cAAc,CAACD,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,KAAG,EAAE,IAAIE,QAAQ,CAACL,KAAK,CAACM,WAAW,EAAE,CAACH,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,KAAGE,QAAQ,CAACd,KAAK,CAACa,cAAc,CAACD,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,IAAIE,QAAQ,CAACL,KAAK,CAACM,WAAW,EAAE,CAACH,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,GAACE,QAAQ,CAACd,KAAK,CAACa,cAAc,CAACD,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAG,EAAC;MAEvSI,KAAK,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,MAAId,OAAO,CAAC,SAAS,EAAC;QAACe,KAAK,EAAC;UAACe,mBAAmB,EAAC;QAAgC;MAAC,CAAC,CAAC,CAAC,CAACb,KAAK,CAACC,KAAK,IAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IACjJ,CAAC,MAAI;MAEGrB,KAAK,CAACkC,KAAK,GAAC,CAAC;MACblC,KAAK,CAACmC,KAAK,GAAC,EAAE;MAEdnB,KAAK,CAAC,8BAA8B,EAAC;QACjCoB,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UACJ,cAAc,EAAC;QACnB,CAAC;QACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACxC,KAAK;MAC7B,CAAC,CAAC,CAACiB,IAAI,CAACwB,IAAI,IAAEA,IAAI,CAACC,IAAI,EAAE,CAAC,CAACzB,IAAI,CAAC,MAAId,OAAO,CAAC,SAAS,EAAC;QAACe,KAAK,EAAC;UAACyB,cAAc,EAAC;QAA2B;MAAC,CAAC,CAAC,CAAC,CAACvB,KAAK,CAACC,KAAK,IAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IAEjJ;EACJ;EAGJ,oBACI;IAAA,uBACI;MAAK,SAAS,EAAEzB,MAAM,CAACgD,QAAS;MAAA,wBAChC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuC,eACvC,QAAC,UAAU;QAAC,cAAc,EAAElC,cAAe;QAAC,KAAK,EAAEV,KAAM;QAAC,QAAQ,EAAEC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EAEzE,iBACP;AAEX;AAAC,GAlEQF,QAAQ;EAAA,QAGCF,WAAW;AAAA;AAAA,KAHpBE,QAAQ;AAmEjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}